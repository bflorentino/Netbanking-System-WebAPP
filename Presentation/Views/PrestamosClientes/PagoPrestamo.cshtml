@model Bussiness.Model.BindingModel.PagoPrestamoBindingModel

@{
    Layout = "_LayoutClientes";
}

<link rel="stylesheet" href="/css/PoPupWindow.css" />
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Source+Sans+Pro&display=swap" rel="stylesheet">
<link rel="stylesheet" href="/css/PoPupWindow.css" />
<link rel="stylesheet" href="/css/dataFormClientes.css"/>

<div class="data-container">

<div class = "cuentasContainer">
    <h1>Seleccione una cuenta de ahorro</h1>
    @{

        foreach(string cuenta in ViewBag.cuentas)
        {
            <input type="button" value="@cuenta" onclick="getBalance(this.value);">
        }
    } 
</div>

<div class="form-data">

<form action="PagoPrestamo" method = "post">
    <h1>Pago de préstamo</h1>
    <div class="field">
    @Html.LabelFor(pago => pago.NumeroCuentaOrigen)
        @Html.EditorFor(pago => pago.NumeroCuentaOrigen, new {htmlAttributes = new {@class="input-text", @id = "cuentaOrigen", @readonly = "readonly"} })
        @Html.ValidationMessageFor(pago => pago.NumeroCuentaOrigen, "", new {@class = "error-message"})
    </div>    

    <div class="field">
        @Html.LabelFor(pago => pago.BalanceCuenta)
        @Html.EditorFor(pago => pago.BalanceCuenta, new {htmlAttributes = new {@class="input-text", id = "balance", @readonly = "readonly"} })
        @Html.ValidationMessageFor(pago => pago.BalanceCuenta, "", new {@class = "error-message"})
    </div>

    <div class="field">
        @Html.LabelFor(pago => pago.MontoAPagar)
        @Html.EditorFor(pago => pago.MontoAPagar, new {htmlAttributes = new {@class="input-text", id = "monto", @readonly = "readonly" } })
        @Html.ValidationMessageFor(pago => pago.MontoAPagar, "", new {@class = "error-message"})
    </div>

    <div class="field">
        @Html.LabelFor(pago => pago.MontoPrestado)
        @Html.EditorFor(pago => pago.MontoPrestado, new {htmlAttributes = new {@class="input-text", id = "pago", @readonly = "readonly"} })
        @Html.ValidationMessageFor(pago => pago.MontoPrestado, "", new {@class = "error-message"})
    </div>
    
 <input type="button" value="Realizar Pago" class="submit-button" id="open" />

        <div class="modal-cont" id="modal-cont">
        <div class="modal">
        <h1>Nuevo Cliente</h1>
        <br />
        <p>¿Desea realizar el pago del préstamo? 
        </p>
        <br />
        <input type="submit" value="SI" class="yes pop" id="enviar"> 
        <input  type="button" value="NO" class="no pop" id="cerrar"/>
        </div>
    </div>
</form>
</div>
</div>


@{
    @if (ViewBag.Response != null)
{
        <div class="modal-cont show" id="modalResponse">
        <div class="modal">
        <h1>Respuesta del servidor</h1>
        <p>@ViewBag.Response</p>
        <input  type="button" value="Cerrar" class="no pop" id="cerrarResponse"> 
        </div>
    </div>
}
}

<script src="~/js/Cuentas.js"></script>
 <script src="~/js/Popup.js"></script>